#!/bin/bash

### openspace Bash-Framework v0.1.0 [https://github.com/openspace42/Bash-Framework]

################################################################################

# Set bash environment error management

set -e
set -u

# Source local functions file

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. $script_dir/functions

# Check for root user runtime

check_root

################################################################################

# Source openspace functions file

source_os_functions

################################################################################

os-log_script

################################################################################

os-define_formatting

define_vars

os-read_conf_settings

################################################################################

os-br_purge_incomplete_archives

os-br_purge_dirs

os-br_create_dirs backup

os-br_update_storage_info

os-br_purge_backups

os-br_backup_locally

################################################################################

if [ "$backup_location" = "s3" ]
then

	mv "$tmp_backup_dir"/* "$backups_latest_dir"

	########################################################################

	os-br_restore_from_S3 test

	########################################################################

	os-br_backup_to_S3

else

	rm -r "$tmp_backup_dir"

fi

if [ -d $tmp_dir ]
then
	rm -r ${tmp_dir:?}
fi

echo "${g}${b}Backup complete!${x}"
echo

os-br_purge_dirs
