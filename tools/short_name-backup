#!/bin/bash

################################################################################

### Set bash environment error management

set -e
set -u

### Source local functions file

echo
source_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [[ "$source_dir" == */tools ]]
then
        source_dir="${source_dir%/tools}"
fi

. "$source_dir/functions"

### Source openspace functions file

source_os_functions

### Define formatting

os-define_formatting

### Define variables

define_vars

################################################################################

check_root

os-log_script

os-read_conf_settings

################################################################################

while getopts ":s" arguments; do
    case $arguments in
		s)	skip_install_complete_check="-s"
		;;
		\?)	echo "${r}${b}Invalid option | -$OPTARG | for function | ${FUNCNAME[0]} |.${x}"
		echo
		os-exit_function
		;;
	esac
done
OPTIND=1

################################################################################

os-br_purge_incomplete_archives

os-br_purge_dirs

os-br_create_dirs backup

os-br_update_storage_info

os-br_purge_backups

os-br_backup_locally "${skip_install_complete_check-}"

################################################################################

if [ "$backup_archival_location" = "s3" ]
then

	mv "$tmp_backup_dir"/* "$backup_local_storage_path/latest"

	############################################################################

	os-br_restore_from_S3 test

	############################################################################

	os-br_backup_to_S3

else

	rm -r "$tmp_backup_dir"

fi

if [ -d "$backup_local_storage_path/temp" ]
then
	rm -r "${backup_local_storage_path:?}/temp"
fi

os-br_purge_dirs

echo "${g}${b}Backup complete!${x}"
echo
