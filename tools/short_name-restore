#!/bin/bash

################################################################################

### Set bash environment error management

set -e
set -u

### Source local functions file

echo
source_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [[ "$source_dir" == */tools ]]
then
        source_dir="${source_dir%/tools}"
fi

. $source_dir/functions

### Source openspace functions file

source_os_functions

### Define formatting

os-define_formatting

### Define variables

define_vars

################################################################################

check_root

os-head_script

os-read_conf_settings

################################################################################

os-check_install_complete

if [ "$install_complete" = "n" ]
then

	echo "${r}${b}It appears $short_name is not currently installed or there is an incomplete installation on this machine.${x}"
	echo
	echo "${b}If you have an S3 backup and want to restore your previous instance of $short_name on this machine while inheriting all of your old settings, you can still run this script, although in bootstrap mode, therefore running the restore prior to actually running the $short_name installation.${x}"
	echo
	echo "${b}If this is not the case, you must run [or finish running] the install script first.${x}"
	echo

	ask_for_boolean_question="Run this script in bootstrap mode to restore your previous instance from S3?"

	os-ask_for_boolean_def_no

	if [ "$ask_for_boolean_output" = "y" ]
	then
		echo "${b}Ok, continuing in bootstrap mode.${x}"
		echo
		bootstrap_mode="y"
	else
		echo "${b}Ok, aborting.${x}"
		echo
		os-exit_function
	fi

	if [ ${bootstrap_mode-null} = "y" ]
	then

		os-setup_backup_restore_s3
		os-br_launch_restore s3
		rsync -aAXx --delete "$restore_file_path/conf/" "$conf_dir/"

		echo "${g-}${b-}Bootstrap-mode restore from S3 complete.${x-}"
		echo
		echo "${b-}Now launching installation.${x-}"
		echo

		os-run_install

		echo "${g-}${b-}Bootstrap-mode installation complete.${x-}"
		echo
		echo "${b-}Exiting.${x-}"
		echo

		exit

	fi

fi

################################################################################

### Read any project-specific restore script arguments

################################################################################

os-br_purge_incomplete_archives

os-br_purge_dirs

os-br_create_dirs restore

################################################################################

os-br_restore_from_standalone_content_description() {
	echo "${b-}These are the files that must be inside your restore directory:${x-}"
}

validate_standalone_restore_content="n"

restore_from_standalone_content_validation() {

	### Perform standalone restore content validation

}

os-br_launch_restore

################################################################################

### Perform a [last] backup of this currently running installation just in case

if [ ! "${skip_backup:-null}" = "y" ]
then

	os-br_last_local_backup

fi

################################################################################

restore_loop

os-br_purge_dirs

echo "${g}${b}Restore complete!${x}"
echo
