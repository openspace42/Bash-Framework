#!/usr/bin/env bash

################################################################################

### Set bash environment error management

set -eu

################################################################################

### Add padding to output

echo

################################################################################

### Determine script execution directory and install directory.

exec_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

exec_dir_trim_2="$( echo ${exec_dir} | cut -f 1,2,3 -d'/')"
exec_dir_trim_3="$( echo ${exec_dir} | cut -f 1,2,3,4 -d'/')"

if [ -f "${exec_dir_trim_2}/functions" ]
then
	exec_dir_root="${exec_dir_trim_2}"
else
	if [ -f "${exec_dir_trim_3}/functions" ]
	then
		exec_dir_root="${exec_dir_trim_3}"
	else
		echo "Functions file not found in any second or third level parent directory of: | ${exec_dir} |."
		echo
		echo "Exiting..."
		echo
        exit 1
	fi
fi

### Source local functions file.

. "$exec_dir_root/functions"

################################################################################

### Define formatting

synthia-define_formatting

################################################################################

### Check for root user runtime

synthia-check_root

################################################################################

### Source dna

synthia-source_dna

################################################################################

### Define variables

synthia-define_vars

################################################################################

### Read conf settings

dna-read_conf_settings

################################################################################

### Head script

dna-head_script

################################################################################

################################################################################
############### Read any project-specific restore script arguments #############
################################################################################

################################################################################
################################################################################
################################################################################

################################################################################

dna-br_purge_incomplete_archives

dna-br_purge_dirs

dna-br_create_dirs restore

################################################################################

dna-check_install_complete

if [ "$install_complete" = "n" ]
then

	echo "${r-}${b-}It appears ${proj_name} is not currently installed or there is an incomplete installation on this machine.${x-}"
	echo
	echo "${b-}If you have an S3 backup and want to restore your previous instance of ${proj_name} on this machine while inheriting all of your old settings, you can still run this script, although in bootstrap mode, therefore running the restore prior to actually running the ${proj_name} installation.${x-}"
	echo
	echo "${b-}If this is not the case, you must run [or finish running] the install script first.${x-}"
	echo

	dna-ask_for_boolean -d "n" -q "Run this script in bootstrap mode to restore your previous instance from S3?"

	if [ "${boolean_output}" = "y" ]
	then
		echo "${b-}Ok, continuing in bootstrap mode.${x-}"
		echo
		bootstrap_mode="y"
	else
		echo "${b-}Ok, aborting.${x-}"
		echo
		dna-exit
	fi

	if [ ${bootstrap_mode-null} = "y" ]
	then

		dna-setup_backup_restore_s3 -s
		dna-br_launch_restore -s
		rsync -aAXx --delete "$restore_file_path/conf/" "$conf_dir/"

		echo "${g-}${b-}Bootstrap-mode restore from S3 complete.${x-}"
		echo
		echo "${b-}Now launching installation.${x-}"
		echo

		dna-run_install

		echo "${g-}${b-}Bootstrap-mode installation complete.${x-}"
		echo
		echo "${b-}Exiting.${x-}"
		echo

		exit

	fi

fi

################################################################################

################################################################################
#################### Specify your restore-time settings here ###################
################################################################################

dna-br_restore_from_standalone_content_description() {
	echo "${b-}<the list of files that must be inside your restore directory>${x-}"
}

validate_standalone_restore_content="n"

restore_from_standalone_content_validation() {

	true   ### Edit this to perform standalone restore content validation

}

################################################################################
################################################################################
################################################################################

dna-br_launch_restore

################################################################################

### Perform a [last] backup of this currently running installation just in case

if [ ! "${skip_backup:-null}" = "y" ]
then

	dna-br_last_local_backup

fi

################################################################################

restore_loop

dna-br_purge_dirs

dna-echo -s "Restore complete!"
